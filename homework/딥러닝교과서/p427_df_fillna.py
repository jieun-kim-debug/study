# nan을 없애지만 말고 대체할 데이터를 대입하자
# fillna() 메서드를 이용하면 nan 부분에 인자로 넘긴 수를 할당
# method를 ffill로 지정하면 nan 부분을 앞에 있는 데이터로 채운다
import numpy as np
from numpy import nan as NA
import pandas as pd

np.random.seed(0)

sample_data_frame = pd.DataFrame(np.random.rand(10,4))

sample_data_frame.iloc[1,0] = NA
sample_data_frame.iloc[6:,2] = NA

solve = sample_data_frame.fillna(method="ffill")
print(solve)
#           0         1         2         3
# 0  0.548814  0.715189  0.602763  0.544883
# 1  0.548814  0.645894  0.437587  0.891773
# 2  0.963663  0.383442  0.791725  0.528895
# 3  0.568045  0.925597  0.071036  0.087129
# 4  0.020218  0.832620  0.778157  0.870012
# 5  0.978618  0.799159  0.461479  0.780529
# 6  0.118274  0.639921  0.461479  0.944669
# 7  0.521848  0.414662  0.461479  0.774234
# 8  0.456150  0.568434  0.461479  0.617635
# 9  0.612096  0.616934  0.461479  0.681820

# 평균치 대입법 : 결측치를 행 또는 열의 평균값으로 보충하는 방법

solve_mean = sample_data_frame.fillna(sample_data_frame.mean())
print(solve_mean)
#           0         1         2         3
# 0  0.548814  0.715189  0.602763  0.544883
# 1  0.531970  0.645894  0.437587  0.891773
# 2  0.963663  0.383442  0.791725  0.528895
# 3  0.568045  0.925597  0.071036  0.087129
# 4  0.020218  0.832620  0.778157  0.870012
# 5  0.978618  0.799159  0.461479  0.780529
# 6  0.118274  0.639921  0.523791  0.944669
# 7  0.521848  0.414662  0.523791  0.774234
# 8  0.456150  0.568434  0.523791  0.617635
# 9  0.612096  0.616934  0.523791  0.681820

# 채워지는 기준은 열컬럼
